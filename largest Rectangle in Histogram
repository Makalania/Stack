public class Solution {
    public int largestRectangleArea(int[] height) {
        if (height == null || height.length == 0) {
            return 0;
        }
        
        int len = height.length;
        Stack<Integer> stack = new Stack<Integer>();
        int max = 0;
        stack.push(0);
        
        for (int i = 1; i < len; i++) {
            if (height[i] >= height[stack.peek()]) {
                stack.push(i);
            }
            else {
                while (!stack.isEmpty() && height[stack.peek()] > height[i]) {
                    int hi = height[stack.pop()];
                    int width = stack.isEmpty() ? i : i - stack.peek() - 1;
                    max = Math.max(max, hi * width);
                }
                stack.push(i);
            }
        }
        
        while (!stack.isEmpty()) {
            int hi = height[stack.pop()];
            int width = stack.isEmpty() ? len : len - stack.peek() - 1;
            max = Math.max(max, hi * width);
        }
        
        return max;
    }
}
