public class Solution {
    public int evalRPN(String[] tokens) {
        if (tokens == null || tokens.length == 0) {
            return 0;
        }
        
        int len = tokens.length;
        Stack<Integer> stack = new Stack<Integer>();
        
        for(int i = 0; i < len; i++) {
            String cur = tokens[i];
            if (!cur.equals("*") && !cur.equals("-") && !cur.equals("+") && !cur.equals("/")) {
                stack.push(Integer.parseInt(cur));
            }
            else if (cur.equals("*")) {
                int right = stack.pop();
                int left = stack.pop();
                stack.push(left * right);
            }
            else if (cur.equals("+")) {
                int right = stack.pop();
                int left = stack.pop();
                stack.push(left + right);
            }
            else if (cur.equals("-")) {
                int right = stack.pop();
                int left = stack.pop();
                stack.push(left - right);
            }
            else if (cur.equals("/")) {
                int right = stack.pop();
                int left = stack.pop();
                stack.push(left / right);
            }
            
        }
        return stack.pop();
    }
}
